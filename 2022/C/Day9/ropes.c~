#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#define INPUT "./testInput"
#define ROWS 6
#define COLUMNS 6

int main(void) {
    FILE *input;
    if ((input = fopen(INPUT, "r")) == NULL) {
	puts("File Not Found");
	exit(1);
    }

    char *line = NULL;
    size_t len = 0;
    ssize_t read;

    bool wasVisited[ROWS][COLUMNS];
    char visitedMap[ROWS][COLUMNS];
    int headPosition[2] = {5, 0};
    // int tailPosition[2] = {0, 5};
    int positionsVisited = 0;
    char travelDirection;
    int steps = 0;

    for (int i = 0; i < ROWS; i++) {
	for (int j = 0; j < COLUMNS; j++) {
	    wasVisited[i][j] = false;
	}
    }

    while ((read = getline(&line, &len, input)) != -1) {
	wasVisited[headPosition[0]][headPosition[1]] = true;
	if (line != NULL){
	    travelDirection = line[0];
	    steps = line[2];
	}
	
	for (int i = 0; i < steps; i++) {
	    switch (travelDirection) {
	    case 'U':
		headPosition[0]--;
		break;
	    case 'D':
		headPosition[0]++;
		break;
	    case 'L':
		headPosition[1]++;
		break;
	    case 'R':
		headPosition[1]--;
		break;
	    }
	    if (headPosition[0] < 0 || headPosition[0] >= ROWS ||
		headPosition[1] < 0 || headPosition[1] >= COLUMNS) {
		puts("Out of bounds error");
		exit(1);
	    }
	    wasVisited[headPosition[0]][headPosition[1]] = true;
	}
    }

    free(line);
    fclose(input);

    for (int i = 0; i < ROWS; i++) {
	for (int j = 0; j < COLUMNS; j++) {
	    visitedMap[i][j] = (wasVisited[i][j] == true)
		? '#'
		: '.';
	}
    }

     return 0;
}
